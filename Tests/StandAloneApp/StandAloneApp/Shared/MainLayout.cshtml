@inherits BlazorLayoutComponent
@inject Toolbelt.Blazor.I18nText.I18nText I18nText

<div class="sidebar">
    <NavMenu />
</div>

<div class="main">
    <div class="top-row px-4">
        <a href="http://blazor.net" target="_blank" class="ml-md-auto">@Text.About</a>
    </div>

    <div class="content px-4">
        @Body

        <div class="footer">
            <div class="form-row align-items-center text-muted px-4">
                <div class="col"></div>
                <div class="col-auto">
                    <span class="oi oi-globe" aria-hidden="true"></span>
                </div>
                <div class="col-auto">
                    <select class="form-control form-control-sm" onchange="@OnChangeCurrentLang">
                        <option value="en" selected="@(CurrentLang == "en")">English</option>
                        <option value="ja" selected="@(CurrentLang == "ja")">日本語</option>
                    </select>
                </div>
            </div>
        </div>
    </div>
</div>

@functions{

    Text Text = new Text();

    string CurrentLang;

    protected override async Task OnInitAsync()
    {
        var lang = await I18nText.GetCurrentLanguageAsync();
        if (new[] { "en", "ja" }.Contains(lang.Split('-')[0]))
            CurrentLang = lang;
        else
            CurrentLang = "en";
        await I18nText.SetCurrentLanguageAsync(CurrentLang);

        Text = await I18nText.GetTextTableAsync<Text>(this);
    }

    async Task OnChangeCurrentLang(UIChangeEventArgs args)
    {
        Console.WriteLine($"OnChange: {args.Type}, {args.Value}");
        CurrentLang = args.Value as string;
        await I18nText.SetCurrentLanguageAsync(CurrentLang);
    }
}