<Project>

  <!--
  This targets file will be bundled with a NuGet package of this library in 'build' package path,
  and will be imported the project file that references this package.
  -->

  <!-- FOR COMPILING -->
  <UsingTask TaskName="Toolbelt.Blazor.I18nText.CompileI18nText"  AssemblyFile="$(MSBuildThisFileDirectory)..\tools\Toolbelt.Blazor.I18nText.CompileTask.dll" />

  <PropertyGroup>
    <I18nTextFilePattern Condition=" '$(I18nTextFilePattern)' == '' ">i18ntext\**\*.json;i18ntext\**\*.csv</I18nTextFilePattern>
    <I18nTextNamespace Condition=" '$(I18nTextNamespace)' == '' ">$(RootNamespace).I18nText</I18nTextNamespace>
    <I18nTextFallBackLanguage Condition=" '$(I18nTextFallBackLanguage)' == '' ">en</I18nTextFallBackLanguage>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(I18nTextFilePattern)</DefaultItemExcludes>
  </PropertyGroup>

  <ItemGroup>
    <Content Remove="$(I18nTextFilePattern)" />
    <Content Include="$(I18nTextFilePattern)">
      <Link>..\..\..\obj\$(Configuration)\$(TargetFramework)\%(RelativeDir)%(Filename)%(Extension)</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Visible>true</Visible>
      <Pack>false</Pack>
    </Content>
    <None Remove="$(I18nTextFilePattern)" />
    <None Include="$(I18nTextFilePattern)" />
    <Watch Remove="$(I18nTextFilePattern)" />
    <Watch Include="$(I18nTextFilePattern)" />
  </ItemGroup>

  <!-- Watch command: "dotnet watch msbuild -nologo -t:CompileI18nText -v:n" -->
  <Target Name="CompileI18nText" BeforeTargets="PreBuildEvent">

    <ItemGroup>
      <I18nText Include="$(I18nTextFilePattern)" />
    </ItemGroup>

    <CompileI18nText Include="@(I18nText)"
                     OutDirectory="$(IntermediateOutputPath)dist\_content\i18ntext"
                     BaseDir="$(ProjectDir)"
                     Namespace="$(I18nTextNamespace)"
                     FallBackLanguage="$(I18nTextFallBackLanguage)"/>

    <ItemGroup>
      <_IntermediateBlazorI18nTextResourceJsons Include="$(IntermediateOutputPath)dist\_content\i18ntext\*.json"></_IntermediateBlazorI18nTextResourceJsons>
      <ContentWithTargetPath Include="@(_IntermediateBlazorI18nTextResourceJsons)">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        <CopyToPublishDirectory>Never</CopyToPublishDirectory>
        <TargetPath>dist\_content\i18ntext\%(Filename)%(Extension)</TargetPath>
        <Visible>false</Visible>
        <Pack>false</Pack>
      </ContentWithTargetPath>
    </ItemGroup>

  </Target>

  <ItemGroup>
    <_IntermediateBlazorI18nTextResourceJsons Include="$(IntermediateOutputPath)dist\_content\i18ntext\*.json"></_IntermediateBlazorI18nTextResourceJsons>
    <ContentWithTargetPath Include="@(_IntermediateBlazorI18nTextResourceJsons)">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <CopyToPublishDirectory>Never</CopyToPublishDirectory>
      <TargetPath>dist\_content\i18ntext\%(Filename)%(Extension)</TargetPath>
      <Visible>false</Visible>
      <Pack>false</Pack>
    </ContentWithTargetPath>
  </ItemGroup>

  <!-- FOR CREATE PACKAGE -->
  <PropertyGroup>
    <BeforePack>_IncludeBlazorI18nTextResourceJsonsForPack; $(BeforePack)</BeforePack>
  </PropertyGroup>
  <Target Name="_IncludeBlazorI18nTextResourceJsonsForPack" DependsOnTargets="CompileI18nText" >
    <ItemGroup>

      <None Include="@(_IntermediateBlazorI18nTextResourceJsons)">
        <PackagePath>i18ntext\%(filename)%(extension)</PackagePath>
        <Pack>true</Pack>
        <Visible>false</Visible>
      </None>

      <None Include="$(MSBuildThisFileDirectory)..\targets\I18nTextPackageBuild.targets">
        <PackagePath>build\$(PackageId).targets</PackagePath>
        <Pack>true</Pack>
        <Visible>false</Visible>
      </None>

    </ItemGroup>
  </Target>

  <!-- FOR PUBLISHING -->
  <Target Name="BlazorI18nTextGetCopyToPublishDirectoryItems"
          BeforeTargets="GetCopyToPublishDirectoryItems"
          Condition="'$(OutputType.ToLowerInvariant())'=='exe'">
    <ItemGroup>
      <_BlazorI18nTextResourceJsons Include="$(TargetDir)\dist\_content\i18ntext\*.json">
      </_BlazorI18nTextResourceJsons>
      <ContentWithTargetPath Include="@(_BlazorI18nTextResourceJsons)">
        <TargetPath>$(BlazorPublishDistDir)_content\i18ntext\%(Filename)%(Extension)</TargetPath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ContentWithTargetPath>
    </ItemGroup>
  </Target>

</Project>